apply plugin: 'com.android.application'

// Read the sensitive data from file sensitive_data.txt
// GV 21/02/2018
def noKeyFound = '"NO_KEY_FOUND"'
def theMovieDbApiKey = noKeyFound

def sensitiveDataFile = file('../sensitive_data.txt')
def Properties sensitiveData = new Properties()

if (sensitiveDataFile.canRead()){
    sensitiveData.load(new FileInputStream(sensitiveDataFile))

    if (sensitiveData != null) {
        if (sensitiveData.containsKey('theMovieDbApiKey')) {
            theMovieDbApiKey = sensitiveData['theMovieDbApiKey']
        }
    }
}
// In this section a reviewer can insert directly his own sensitive data
// by replacing the strings beginning with REVIEWERS_
// Just double click on the string and paste you own data
if (theMovieDbApiKey == noKeyFound) theMovieDbApiKey = '"REVIEWERS_THEMOVIEDB_API_KEY_GOES_HERE"'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.aiassoft.popularmovies"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Begin of injecting the sensitive data
        // Add the sensitive data as Const Fields to the BuildConfig class
        buildConfigField "String", "THEMOVIEDB_API_KEY", theMovieDbApiKey
        // Add the sensitive data as String Resources
        resValue "string", "THEMOVIEDB_API_KEY", theMovieDbApiKey
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "12g"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'

    // RecyclerView dependency, is part of the support library
    implementation 'com.android.support:recyclerview-v7:26.1.0'

    // Picasso dependency
    implementation 'com.squareup.picasso:picasso:2.5.2'
}

